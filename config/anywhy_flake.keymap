#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
    flavor = "balanced";
    hold-trigger-key-positions = <16 17 18 13 12 11 20>;
    hold-trigger-on-release;
};

&mmv {
};

&msc {
};

&lt {
};

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&mt GRAVE ESCAPE>;
            key-positions = <1 2>;
            layers = <1 0 4>;
        };

        b {
            bindings = <&kp CLCK>;
            key-positions = <13 14 15>;
        };

        d {
            bindings = <&kp DEL>;
            key-positions = <9 10>;
        };

        e {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        h {
            bindings = <&sys_reset>;
            key-positions = <1 14 27>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <10 21 32>;
        };

        Backslash_pipe {
            bindings = <&mt PIPE BACKSLASH>;
            key-positions = <33 34>;
        };

        print_screen {
            bindings = <&screenshot>;
            key-positions = <37 38 39>;
        };

        num_layer {
            bindings = <&to 4>;
            key-positions = <6 7 8>;
        };

        bt_layer {
            bindings = <&to 7>;
            key-positions = <3 4 5>;
        };

        default_layer {
            bindings = <&to 0>;
            key-positions = <30 31 32 33>;
        };

        f_layer {
            bindings = <&to 6>;
            key-positions = <29 28 27 26>;
        };

        colemak_dh {
            bindings = <&tog 1>;
            key-positions = <34 22>;
        };

        Tilde {
            bindings = <&mt LS(GRAVE) GRAVE>;
            key-positions = <1 2>;
            layers = <3 2>;
        };
    };

    macros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LEFT_GUI)>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LS(LEFT_GUI)>;

            label = "SCREENSHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_dh {
            bindings = <
&none  &none     &none     &none      &none      &none    &none  &none      &none      &none     &none      &none
&none  &kp Q     &kp W     &kp E      &kp R      &kp T    &kp Y  &kp U      &kp I      &kp O     &kp P      &none
&none  &kp A     &kp S     &kp D      &kp F      &kp G    &kp H  &kp J      &kp K      &kp L     &kp SEMI   &none
&none  &kp Z     &kp X     &kp C      &kp V      &kp B    &kp N  &kp M      &kp COMMA  &kp DOT   &kp FSLH   &none
       &kp LGUI  &kp LALT  &kp LCTRL  &kp SPACE  &mo 1    &mo 2  &kp LSHFT  &kp LGUI   &kp LALT  &kp LCTRL
            >;
        };

        arrow_numbers {
            bindings = <
&none  &none     &none          &none      &none      &none       &none      &none   &none   &none   &none      &none
&none  &kp ESC   &kp BACKSPACE  &kp TAB    &kp ENTER  &kp DEL     &kp GRAVE  &kp N7  &kp N8  &kp N9  &kp MINUS  &none
&none  &kp LGUI  &kp LALT       &kp LCTRL  &kp LSHFT  &kp LBKT    &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp N0     &none
&none  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &kp RBKT    &kp SQT    &kp N1  &kp N2  &kp N3  &kp BSLH   &none
       &trans    &trans         &trans     &trans     &none       &none      &trans  &trans  &trans  &trans
            >;
        };

        number_layer {
            bindings = <
&none  &none    &none   &none   &none   &none             &none  &none       &none         &none         &none         &none
&none  &kp F12  &kp F7  &kp F8  &kp F9  &soft_off         &bt2   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP  &none
&none  &kp F10  &kp F4  &kp F5  &kp F6  &kp CAPS          &bt1   &kp RSHFT   &kp RCTRL     &kp RALT      &kp RGUI      &none
&none  &kp F11  &kp F1  &kp F2  &kp F3  &studio_unlock    &bt0   &kp C_PP    &kp C_PREV    &kp C_NEXT    &kp C_BRI_DN  &none
       &trans   &trans  &trans  &trans  &none             &none  &trans      &trans        &trans        &trans
            >;
        };

        mouse_layer {
            bindings = <
&kp ESC    &kp N1     &kp N2  &kp N3  &kp N4     &kp N5    &kp N6  &kp N7     &kp N8     &kp N9    &kp N0     &kp MINUS
&kp CAPS   &kp TAB    &kp Q   &kp W   &kp E      &kp R     &kp Y   &kp U      &kp I      &kp O     &kp P      &kp BSPC
&kp ENTER  &kp LSHFT  &kp A   &kp S   &kp D      &kp F     &kp H   &kp J      &kp K      &kp L     &kp SEMI   &kp APOS
&kp LBKT   &kp LCTRL  &kp Z   &kp X   &kp C      &kp V     &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH   &kp RBKT
           &kp T      &kp G   &kp B   &kp SPACE  &mo 4     &mo 2   &kp LSHFT  &kp LGUI   &kp LALT  &kp LCTRL
            >;
        };

        f_layer {
            bindings = <
&trans  &trans   &trans    &trans    &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp ESC  &kp BSPC  &kp CAPS  &kp ENTER  &kp DEL    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N1   &kp N2    &kp N3    &kp N4     &kp N5     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N6   &kp N7    &kp N8    &kp N9     &kp N0     &trans  &trans  &trans  &trans  &trans  &trans
        &trans   &trans    &trans    &trans     &trans     &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
